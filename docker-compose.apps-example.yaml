---
version: '3.8'


services:
  postgres:
    image: postgres:11
    command: -c shared_preload_libraries='pg_stat_statements' -c pg_stat_statements.max=10000 -c pg_stat_statements.track=all
    container_name: postgres
    restart: unless-stopped
    environment:
      - TZ=UTC
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    ports:
      - 127.0.0.1:5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]

  rabbitmq:
    image: rabbitmq:3.11.1-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq123
    healthcheck:
      timeout: 55s
      interval: 55s
      retries: 5
      test: [ "CMD", "rabbitmqctl", "node_health_check" ]

  mongo:
    image: mongo:4.4.11
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo123
    ports:
      - "127.0.0.1:27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo 127.0.0.1:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis:
    image: redis:7.0.5
    container_name: redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

networks:
  default:
    external:
      name: monitoring-network
